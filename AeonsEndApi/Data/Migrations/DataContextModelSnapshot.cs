// <auto-generated />
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace AeonsEndApi.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Model.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameVersionId")
                        .HasColumnType("int");

                    b.Property<int?>("HeroId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBasic")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameVersionId");

                    b.HasIndex("HeroId");

                    b.HasIndex("TypeId");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("Data.Model.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardTypes", (string)null);
                });

            modelBuilder.Entity("Data.Model.GameVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameVersions", (string)null);
                });

            modelBuilder.Entity("Data.Model.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AbilityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameVersionId");

                    b.ToTable("Heroes", (string)null);
                });

            modelBuilder.Entity("Data.Model.Nemezis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BackStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Release")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameVersionId");

                    b.ToTable("Nemeses", (string)null);
                });

            modelBuilder.Entity("Data.Model.Card", b =>
                {
                    b.HasOne("Data.Model.GameVersion", "GameVersion")
                        .WithMany("Cards")
                        .HasForeignKey("GameVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.Hero", "Hero")
                        .WithMany("Cards")
                        .HasForeignKey("HeroId");

                    b.HasOne("Data.Model.CardType", "Type")
                        .WithMany("Cards")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameVersion");

                    b.Navigation("Hero");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Data.Model.Hero", b =>
                {
                    b.HasOne("Data.Model.GameVersion", "GameVersion")
                        .WithMany("Heroes")
                        .HasForeignKey("GameVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameVersion");
                });

            modelBuilder.Entity("Data.Model.Nemezis", b =>
                {
                    b.HasOne("Data.Model.GameVersion", "GameVersion")
                        .WithMany("Nemeses")
                        .HasForeignKey("GameVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameVersion");
                });

            modelBuilder.Entity("Data.Model.CardType", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Data.Model.GameVersion", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Heroes");

                    b.Navigation("Nemeses");
                });

            modelBuilder.Entity("Data.Model.Hero", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
